/*
Ory Hydra API

Documentation for all of Ory Hydra's APIs.

API version:
Contact: hi@ory.sh
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// AdminTrustOAuth2JwtGrantIssuerBody struct for AdminTrustOAuth2JwtGrantIssuerBody
type AdminTrustOAuth2JwtGrantIssuerBody struct {
	// The \"allow_any_subject\" indicates that the issuer is allowed to have any principal as the subject of the JWT.
	AllowAnySubject *bool `json:"allow_any_subject,omitempty"`
	// The \"expires_at\" indicates, when grant will expire, so we will reject assertion from \"issuer\" targeting \"subject\".
	ExpiresAt time.Time `json:"expires_at"`
	// The \"issuer\" identifies the principal that issued the JWT assertion (same as \"iss\" claim in JWT).
	Issuer string     `json:"issuer"`
	Jwk    JsonWebKey `json:"jwk"`
	// The \"scope\" contains list of scope values (as described in Section 3.3 of OAuth 2.0 [RFC6749])
	Scope []string `json:"scope"`
	// The \"subject\" identifies the principal that is the subject of the JWT.
	Subject *string `json:"subject,omitempty"`
}

// NewAdminTrustOAuth2JwtGrantIssuerBody instantiates a new AdminTrustOAuth2JwtGrantIssuerBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminTrustOAuth2JwtGrantIssuerBody(expiresAt time.Time, issuer string, jwk JsonWebKey, scope []string) *AdminTrustOAuth2JwtGrantIssuerBody {
	this := AdminTrustOAuth2JwtGrantIssuerBody{}
	this.ExpiresAt = expiresAt
	this.Issuer = issuer
	this.Jwk = jwk
	this.Scope = scope
	return &this
}

// NewAdminTrustOAuth2JwtGrantIssuerBodyWithDefaults instantiates a new AdminTrustOAuth2JwtGrantIssuerBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminTrustOAuth2JwtGrantIssuerBodyWithDefaults() *AdminTrustOAuth2JwtGrantIssuerBody {
	this := AdminTrustOAuth2JwtGrantIssuerBody{}
	return &this
}

// GetAllowAnySubject returns the AllowAnySubject field value if set, zero value otherwise.
func (o *AdminTrustOAuth2JwtGrantIssuerBody) GetAllowAnySubject() bool {
	if o == nil || o.AllowAnySubject == nil {
		var ret bool
		return ret
	}
	return *o.AllowAnySubject
}

// GetAllowAnySubjectOk returns a tuple with the AllowAnySubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminTrustOAuth2JwtGrantIssuerBody) GetAllowAnySubjectOk() (*bool, bool) {
	if o == nil || o.AllowAnySubject == nil {
		return nil, false
	}
	return o.AllowAnySubject, true
}

// HasAllowAnySubject returns a boolean if a field has been set.
func (o *AdminTrustOAuth2JwtGrantIssuerBody) HasAllowAnySubject() bool {
	if o != nil && o.AllowAnySubject != nil {
		return true
	}

	return false
}

// SetAllowAnySubject gets a reference to the given bool and assigns it to the AllowAnySubject field.
func (o *AdminTrustOAuth2JwtGrantIssuerBody) SetAllowAnySubject(v bool) {
	o.AllowAnySubject = &v
}

// GetExpiresAt returns the ExpiresAt field value
func (o *AdminTrustOAuth2JwtGrantIssuerBody) GetExpiresAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
func (o *AdminTrustOAuth2JwtGrantIssuerBody) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresAt, true
}

// SetExpiresAt sets field value
func (o *AdminTrustOAuth2JwtGrantIssuerBody) SetExpiresAt(v time.Time) {
	o.ExpiresAt = v
}

// GetIssuer returns the Issuer field value
func (o *AdminTrustOAuth2JwtGrantIssuerBody) GetIssuer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value
// and a boolean to check if the value has been set.
func (o *AdminTrustOAuth2JwtGrantIssuerBody) GetIssuerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Issuer, true
}

// SetIssuer sets field value
func (o *AdminTrustOAuth2JwtGrantIssuerBody) SetIssuer(v string) {
	o.Issuer = v
}

// GetJwk returns the Jwk field value
func (o *AdminTrustOAuth2JwtGrantIssuerBody) GetJwk() JsonWebKey {
	if o == nil {
		var ret JsonWebKey
		return ret
	}

	return o.Jwk
}

// GetJwkOk returns a tuple with the Jwk field value
// and a boolean to check if the value has been set.
func (o *AdminTrustOAuth2JwtGrantIssuerBody) GetJwkOk() (*JsonWebKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Jwk, true
}

// SetJwk sets field value
func (o *AdminTrustOAuth2JwtGrantIssuerBody) SetJwk(v JsonWebKey) {
	o.Jwk = v
}

// GetScope returns the Scope field value
func (o *AdminTrustOAuth2JwtGrantIssuerBody) GetScope() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *AdminTrustOAuth2JwtGrantIssuerBody) GetScopeOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scope, true
}

// SetScope sets field value
func (o *AdminTrustOAuth2JwtGrantIssuerBody) SetScope(v []string) {
	o.Scope = v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *AdminTrustOAuth2JwtGrantIssuerBody) GetSubject() string {
	if o == nil || o.Subject == nil {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminTrustOAuth2JwtGrantIssuerBody) GetSubjectOk() (*string, bool) {
	if o == nil || o.Subject == nil {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *AdminTrustOAuth2JwtGrantIssuerBody) HasSubject() bool {
	if o != nil && o.Subject != nil {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *AdminTrustOAuth2JwtGrantIssuerBody) SetSubject(v string) {
	o.Subject = &v
}

func (o AdminTrustOAuth2JwtGrantIssuerBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowAnySubject != nil {
		toSerialize["allow_any_subject"] = o.AllowAnySubject
	}
	if true {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if true {
		toSerialize["issuer"] = o.Issuer
	}
	if true {
		toSerialize["jwk"] = o.Jwk
	}
	if true {
		toSerialize["scope"] = o.Scope
	}
	if o.Subject != nil {
		toSerialize["subject"] = o.Subject
	}
	return json.Marshal(toSerialize)
}

type NullableAdminTrustOAuth2JwtGrantIssuerBody struct {
	value *AdminTrustOAuth2JwtGrantIssuerBody
	isSet bool
}

func (v NullableAdminTrustOAuth2JwtGrantIssuerBody) Get() *AdminTrustOAuth2JwtGrantIssuerBody {
	return v.value
}

func (v *NullableAdminTrustOAuth2JwtGrantIssuerBody) Set(val *AdminTrustOAuth2JwtGrantIssuerBody) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminTrustOAuth2JwtGrantIssuerBody) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminTrustOAuth2JwtGrantIssuerBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminTrustOAuth2JwtGrantIssuerBody(val *AdminTrustOAuth2JwtGrantIssuerBody) *NullableAdminTrustOAuth2JwtGrantIssuerBody {
	return &NullableAdminTrustOAuth2JwtGrantIssuerBody{value: val, isSet: true}
}

func (v NullableAdminTrustOAuth2JwtGrantIssuerBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminTrustOAuth2JwtGrantIssuerBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
